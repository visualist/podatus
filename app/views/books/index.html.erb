<script>

var book_ids = <%= @books.map(&:id) %>;
var titles = <%= raw(@books.map(&:title).to_json) %>;
var start_chapter = <%= start_chapter = 5 %>;
var bookGraphs;


// an aesthetic experiment: (this is called initially, and on chapter#-adjustment)
var set_chapter_font_size = function(chapter, element) {
    var fontsize = 200;
    if (chapter > 9) {
        fontsize = 150;
    }
    console.log("Set chapter(" + chapter + ") font-size: " + fontsize + "%");
    console.log(element);
    element.css("font-size", fontsize + "%");
}

var keypress_handler = function(e) {
    var elem = $(e.target);
    var chapter = parseInt(elem.html());
    var book = elem.data('book');
    var bookGraph = bookGraphs[book-1]; // HACK!
    chapter = keycode_functions(e.which, chapter, 1, bookGraph.last_chapter);
    if (chapter) {
        set_chapter_font_size(chapter, elem);
        bookGraph.graph.render_chapter(chapter);
        var key = "book" + book + "c";
        basil.set(key, chapter);
    }
}

$(document).ready(function() {
  bookGraphs = $.map(book_ids, function(book_id, i){
      var selctr = "#book-" + book_id;
      var req_url = "/book/" + book_id + ".json" // => obj['chapters']
      var x = {
          book: book_id,
          index: i,
          //chapter_selector_jq: $(selctr).parent().parent().find(".chapter p"),
          graph_selector: selctr,
          graph: new HorizontalStreamgraph({book: book_id, selection: selctr})
      };
      $.get(req_url, function(d) {
          //console.log('ajax data returned:');
          //console.log(d.chapters);
          //console.log(x);
          x['chapters'] = d.chapters;
          x['last_chapter'] = d.last_chapter;
      });
      return x;
  });
  basil = new window.Basil();
  bookGraphs.forEach(function(book){
      var key = "book" + book.book + "c",
          chap = 3;
      if (basil.get(key)) {
         chap = basil.get(key);
      }
      set_chapter_font_size(chap, $(book.graph_selector).parent().find(".chapter p"));
      book.graph.render_chapter(chap);
  });

  $(".chapter p").clicktoggle(function(){
      //console.log('Toggle ON');
      var $this = $(this);

      var $peers = $this.parent().parent().parent().parent().find('.chapter p');
      $peers.css('color', '#b0b0b0');
      $peers.blur();

      $this.css('color', '#8080c0');
      $this.css('outline', 'none');
      $this.attr('tabindex', 1);
      $this.focus();

      $this.on('keydown', keypress_handler);

  }, function(){
      //console.log('Toggle OFF');
      var $this = $(this);
      $this.css('color', '#b0b0b0'); //normal
      $this.off('keydown'); // , keypress_handler);
      $this.blur();
  });

  $(document).on("mouseenter", ".pos-hover", function(e) {
      var $this = $(this);
      $this.siblings(".pos-hover").css("opacity", 0.2);
      $this.css("opacity", 1);
  }).on("mouseleave", ".pos-hover", function() {
      var $this = $(this);
      $this.siblings(".pos-hover").css("opacity", 1);
  });
});
</script>

<div class="books-page">
  <h2>All books: selected chapters</h2>
  <% @books.each do |book| %>
    <div class="book-item">
      <div class="book-title"><span class="title"><%= book.has_data? ? link_to(book.title, book_path(book)) : book.title %></span>, <%= book.author %></div>

      <div class="row">
        <div class="chapter"><p data-book="<%= book.id %>"><%= start_chapter %></p>
        </div>
        <div class="graph" id="book-<%= book.id %>"></div>
        <div class="clearfix"></div>
      </div>

    </div>
  <% end %>
</div>
